{{- $platform := "bmrg" -}}
{{- $product := "flow" -}}
{{- $tier := "services" -}}
{{- if $.Values.ingress.enabled -}}
{{- range $k, $v := $.Values.services }}
{{- if and (ne $k "controller") (ne $k "listener") }}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ include "bmrg.name" (dict "context" $ "tier" $tier "component" $k ) }}
  labels:
    {{- include "bmrg.labels.chart" (dict "context" $ "tier" $tier "component" $k ) | nindent 4 }}
  annotations:
    {{- if eq $.Values.auth.enabled true }}
    {{- include "bmrg.ingress.config.auth_proxy_auth_annotations" $ | nindent 4 }}
    {{- end }}
    {{- if eq $k "workflow" }}
    {{ $.Values.ingress.annotationsPrefix}}/proxy-connect-timeout: "600"
    {{- end }}
    {{ $.Values.ingress.annotationsPrefix}}/configuration-snippet: |
      {{- if $.Values.auth.enabled }}
      {{- include "bmrg.ingress.config.auth_proxy_access_control" $ | nindent 6 }}
      {{- include "bmrg.ingress.config.auth_proxy_authorization" $ | nindent 6 }}
      {{- end }}
      if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' $http_origin;
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,PATCH,DELETE,OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Length' 0;
      add_header 'Content-Type' 'text/plain charset=UTF-8';
      return 204;}
    {{ $.Values.ingress.annotationsPrefix}}/ssl-redirect: "false"
    {{ $.Values.ingress.annotationsPrefix}}/rewrite-target: /{{ $k }}/$2
    {{ $.Values.ingress.annotationsPrefix}}/client-max-body-size: 1m
    kubernetes.io/ingress.class: {{ $.Values.ingress.class}}
spec:
  rules:
    - host: {{ $.Values.ingress.host }}
      http:
        paths:
          - path: {{ if $.Values.ingress.root }}{{ $.Values.ingress.root }}{{- end }}/{{ $product }}/{{ $tier }}/{{ $k }}(/|$)(.*)
            backend:
              serviceName:  {{ include "bmrg.name" (dict "context" $ "tier" $tier "component" $k ) }}
              servicePort: {{ $platform }}-port-svc
  tls:
    - hosts:
        - {{ $.Values.ingress.host }}
      {{- if $.Values.ingress.tlsSecretName }}
      secretName: {{ $.Values.ingress.tlsSecretName }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}